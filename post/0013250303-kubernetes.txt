3:I[4707,[],""]
5:I[6423,[],""]
6:I[4829,["679","static/chunks/679-09931d2c20ac23c4.js","185","static/chunks/app/layout-7b9eb4963e5bd58c.js"],"default"]
4:["slug","0013250303-kubernetes","d"]
0:["DYD_M1rFU_vsFyhVUDeH2",[[["",{"children":["post",{"children":[["slug","0013250303-kubernetes","d"],{"children":["__PAGE__?{\"slug\":\"0013250303-kubernetes\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["post",{"children":[["slug","0013250303-kubernetes","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/tech-blog/_next/static/css/86708423b213bf15.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","post","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","post","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/tech-blog/_next/static/css/1f59140b53390c8f.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"ko","className":"__className_c5102c","children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"}],["$","meta",null,{"name":"theme-color","content":"#ffffff","media":"(prefers-color-scheme: light)"}],["$","meta",null,{"name":"theme-color","content":"#000000","media":"(prefers-color-scheme: dark)"}],["$","meta",null,{"name":"naver-site-verification","content":"1df124e1d8331da4467178ffddd6188e1d413576"}],["$","meta",null,{"name":"google-adsense-account","content":"ca-pub-6151583773425822"}],["$","link",null,{"rel":"dns-prefetch","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"dns-prefetch","href":"https://fonts.gstatic.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com","crossOrigin":"anonymous"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com","crossOrigin":"anonymous"}],["$","script",null,{"async":true,"src":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6151583773425822","crossOrigin":"anonymous"}]]}],["$","$L6",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]]}]],null],null],["$L7",null]]]]
8:I[2089,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
9:I[3299,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
a:I[1040,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
c:I[2786,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
d:I[6798,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
b:T2c86,<p>Pod 에는 Lifecycle 이 존재하고 어떤 Pod 든 만들어지고 사라지는 과정을 거치게 된다. Lifecycle 은 각 단계 별로 하는 행동이 다르다는 특징을 갖는다. Pod 역시 단계별로 주요 행동들이 있고,
앞으로 알아 볼 ReadinessProbe, LivenessProbe, Qos, Policy 등 다양한 기능들이 Pod 의 특정 단계와 관련이 있기 때문에 Lifecycle 에 대해 잘 알아야 한다.</p>
<p>Pod 를 생성하고 나면 아래와 같이 Status 에 대한 값을 확인할 수 있다.</p>
<pre><code class="hljs language-yml"><span class="hljs-attr">status:</span>
  <span class="hljs-attr">phase:</span> <span class="hljs-string">Pending</span>
  <span class="hljs-attr">conditions:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">Initialized</span>
      <span class="hljs-attr">status:</span> <span class="hljs-string">'True'</span>
      <span class="hljs-attr">lastProbeTime:</span> <span class="hljs-literal">null</span>
      <span class="hljs-attr">lastTransitionTime:</span> <span class="hljs-string">'2019-09-26T22:07:56Z'</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">PodScheduled</span>
      <span class="hljs-attr">status:</span> <span class="hljs-string">'True'</span>
      <span class="hljs-attr">lastProbeTime:</span> <span class="hljs-literal">null</span>
      <span class="hljs-attr">lastTransitionTime:</span> <span class="hljs-string">'2019-09-26T22:07:56Z'</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">ContainersReady</span>
      <span class="hljs-attr">status:</span> <span class="hljs-string">'False'</span>
      <span class="hljs-attr">lastProbeTime:</span> <span class="hljs-literal">null</span>
      <span class="hljs-attr">lastTransitionTime:</span> <span class="hljs-string">'2019-09-26T22:08:11Z'</span>
      <span class="hljs-attr">reason:</span> <span class="hljs-string">ContainersNotReady</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">type:</span> <span class="hljs-string">Ready</span>
      <span class="hljs-attr">status:</span> <span class="hljs-string">'False'</span>
      <span class="hljs-attr">lastProbeTime:</span> <span class="hljs-literal">null</span>
      <span class="hljs-attr">lastTransitionTime:</span> <span class="hljs-string">'2019-09-26T22:08:11Z'</span>
      <span class="hljs-attr">reason:</span> <span class="hljs-string">ContainersNotReady</span>


<span class="hljs-attr">containerStatuses:</span>
  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">container</span>
    <span class="hljs-attr">state:</span>
      <span class="hljs-attr">waiting:</span>
        <span class="hljs-attr">reason:</span> <span class="hljs-string">ContainerCreating</span>
      <span class="hljs-attr">lastState:</span> { }
      <span class="hljs-attr">ready:</span> <span class="hljs-literal">false</span>
      <span class="hljs-attr">restartCount:</span> <span class="hljs-number">0</span>
      <span class="hljs-attr">image:</span> <span class="hljs-string">tmkube/init</span>
      <span class="hljs-attr">imageID:</span> <span class="hljs-string">""</span>
      <span class="hljs-attr">started:</span> <span class="hljs-literal">false</span>
</code></pre>
<p>상기 내용에 대한 전체적인 구조는 아래와 같다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-01.png" alt="0013-01"></p>
<ol>
<li>Pod > Status > Phase : Pod 의 전체 상태를 대표하는 속성
<ol>
<li>Pending</li>
<li>Running</li>
<li>Succeeded</li>
<li>Failed</li>
<li>Unknown</li>
</ol>
</li>
<li>Pod > Status > Conditions : Pod 가 생성 되면서 실행하는 각 단계와 단계의 상태를 알려주는 속성
<ol>
<li>Conditions
<ol>
<li>Initialized</li>
<li>ContainerReady</li>
<li>PodScheduled</li>
<li>Ready</li>
</ol>
</li>
<li>Reason
<ol>
<li>ContainersNotReady</li>
<li>PodCompleted</li>
</ol>
</li>
</ol>
</li>
<li>Pod > Containers > State : Pod 안에 있는 각 Container 를 대표하는 상태
<ol>
<li>State
<ol>
<li>Waiting</li>
<li>Running</li>
<li>Terminated</li>
</ol>
</li>
<li>Reason
<ol>
<li>ContainerCreating</li>
<li>CrashLoopBackOff</li>
<li>Error</li>
<li>Completed</li>
</ol>
</li>
</ol>
</li>
</ol>
<p>Pod 의 전체 상태를 나타내는 것이 Phase 라고 했는데 이 상태가 어떻게 바뀌고 바뀜에 따라 Pod 의 Container 동작이 어떻게 달라지는지 정리 한다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-03.gif" alt="0013-03"></p>
<hr>
<p><img src="/tech-blog/resources/images/kubernetes/0013-04.png" alt="0013-04"></p>
<p>Pod 의 최초 상태는 Pending 이다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-05.png" alt="0013-05"></p>
<p>띄우려고 하는 Container 가 기동되기 전에 초기화 해야 하는 내용이 있는 경우 그 내용을 담는 initContainer 가 있다. 만약 Volume 이나 보안 설정을 위해 사전 설정을 해야 하는 등의 경우에
해당 한다.</p>
<pre><code class="hljs language-yml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span>
<span class="hljs-attr">kind:</span> <span class="hljs-string">Pod</span>
<span class="hljs-attr">metadata:</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">myapp-pod</span>
  <span class="hljs-attr">labels:</span>
    <span class="hljs-attr">app:</span> <span class="hljs-string">myapp</span>
<span class="hljs-attr">spec:</span>
  <span class="hljs-attr">containers:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">myapp-container</span>
      <span class="hljs-attr">image:</span> <span class="hljs-string">busybox:1.28</span>
      <span class="hljs-attr">command:</span> [ <span class="hljs-string">'sh'</span>, <span class="hljs-string">'-c'</span>, <span class="hljs-string">'echo The app is running! &#x26;&#x26; sleep 3600'</span> ]
  <span class="hljs-attr">initContainers:</span> <span class="hljs-comment"># Pod 생성 내용 안에 initContainers 항목으로 초기화 스크립트를 삽입할 수 있다.</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">init-myservice</span>
      <span class="hljs-attr">image:</span> <span class="hljs-string">busybox:1.28</span>
      <span class="hljs-attr">command:</span> [ <span class="hljs-string">'sh'</span>, <span class="hljs-string">'-c'</span>, <span class="hljs-string">'until nslookup myservice; do echo waiting for myservice; sleep 2; done;'</span> ]
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">init-mydb</span>
      <span class="hljs-attr">image:</span> <span class="hljs-string">busybox:1.28</span>
      <span class="hljs-attr">command:</span> [ <span class="hljs-string">'sh'</span>, <span class="hljs-string">'-c'</span>, <span class="hljs-string">'unitl mslookup mydb; do echo waiting for mydb; sleep 2; done;'</span> ]
</code></pre>
<p><img src="/tech-blog/resources/images/kubernetes/0013-06.png" alt="0013-06"></p>
<p>initContainer 가 정상적으로 실행 되었거나, Pod 에 설정되어 있지 않았을 경우 Initialized 값이 True 가 되고 실패했을 경우 False 가 된다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-07.png" alt="0013-07"></p>
<p>이 Pod 가 올라갈 Node 는 직접 지정한 경우 그 node 에, 지정하지 않은 경우 k8s 가 자원의 상황을 판단하여 올라갈 Node 를 결정 한다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-08.png" alt="0013-08"></p>
<p>Pod 가 올라갈 Node 선정이 완료 되면 PodScheduled 값은 True 가 된다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-09.png" alt="0013-09"></p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-10.png" alt="0013-10"></p>
<p>Container 에 image 를 다운로드 한다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-11.png" alt="0013-11"></p>
<p>Node 를 선정하고 image 를 다운받는 동안 Container 의 상태는 Waiting 이고 reason 은 ContainerCreating 이다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-12.png" alt="0013-12"></p>
<p>본격적으로 Container 가 기동 되면서 Pod 와 Container 의 상태는 Running 이 된다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-13.png" alt="0013-13"></p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-14.png" alt="0013-14"></p>
<p>보통 정상적으로 기동이 될 수도 있지만 하나 또는 모든 Container 가 기동 중 문제가 발생하여 재 시작 될 수 있다. 문제가 발생한 경우 Container 의 상태는 Waiting 이고
CrashLoopBackOff 라는 reason 값을 가진다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-15.png" alt="0013-15"></p>
<p>Pod 는 Container 의 이런 상태들에 대해 Running 이라고 간주하고, 대신 내부 Condition 에 ContainerReady 와 Ready 값은 False 로 가진다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-16.png" alt="0013-16"></p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-17.png" alt="0013-17"></p>
<p>결국 모든 Container 들이 정상적으로 기동 되어 동작 한다면 Condition 들은 모두 True 값이 된다.</p>
<p>그래서 서비스가 계속 운영 되어야 하는 경우 이 status 가 True 인 상태를 계속 유지해야 한다.</p>
<p>여기서 기억해야 할 것은 Pod 의 상태가 Running 이더라도 내부 Container 들의 상태가 Running 이 아닐 수 있기 때문에 Pod 뿐만 아니라 Container 의 상태도 모니터링 해야 한다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-18.png" alt="0013-18"></p>
<p>Job 이나 CronJob 으로 생성 된 Pod 의 경우 자신의 일을 수행 했을 때는 Running 중 이지만, 일을 마치고 나면 Pod 는 더 이상 일을 하지 않는 상태가 된다. 이 때 Pod 의 상태는
Failed 나 Succeeded 두 가지 중 하나를 갖는다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-19.png" alt="0013-19"></p>
<p>만약 작업을 하고 있는 Container 중에 하나라도 문제가 생겨 에러가 발생 하면 Pod 의 상태는 Failed 가 된다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-20.png" alt="0013-20"></p>
<p>Container 들이 모두 Completed 로 일들을 잘 마쳤을 때 Succeeded 가 된다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-21.png" alt="0013-21"></p>
<p>이때 또 Pod 의 Condition 값이 변하게 되는데, 성패 여부를 떠나 ContainerReadty 와 Reday 의 값이 False 로 바뀌게 된다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-22.png" alt="0013-22"></p>
<p>추가적인 경우로 Pending 중에 바로 Failed 로 빠지는 경우도 있고</p>
<p><img src="/tech-blog/resources/images/kubernetes/0013-23.png" alt="0013-23"></p>
<p>Pending 이나 Running 중에 통신 장애가 발생하면 Pod 가 Unknown 상태로 바뀌게 된다. 통신 장애 복구가 빨리 이루어지면 다시 기초 상태로 변경 되지만 이 상태가 오래 지속 되면 Failed 로
가기도 한다.</p>2:[["$","div",null,{"className":"$undefined","children":[["$","header",null,{"className":"PostHeader_postHeader__OohTH","children":[["$","h1",null,{"className":"PostHeader_title__NoKGt","children":"Pod - Lifecycle"}],["$","p",null,{"className":"PostHeader_description__moC_r","children":""}],["$","div",null,{"className":"PostHeader_meta__9Swgx","children":[["$","span",null,{"className":"$undefined","children":"nimkoes"}],["$","span",null,{"className":"$undefined","children":"2021-03-02"}]]}],["$","div",null,{"className":"PostHeader_tags__lGQ1Q","children":[["$","span","Kubernetes",{"className":"PostHeader_tag__Jf7BC","children":"Kubernetes"}],["$","span","k8s",{"className":"PostHeader_tag__Jf7BC","children":"k8s"}],["$","span","infra",{"className":"PostHeader_tag__Jf7BC","children":"infra"}]]}]]}],["$","$L8",null,{}],["$","article",null,{"className":"page_markdown__SVl4d","children":[["$","$L9",null,{"className":"page_topAd__ctbB7"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":""}}],["$","$La",null,{"className":"page_middleAd__4qBOv","client":"ca-pub-6151583773425822","slot":"your-ad-slot-id"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$b"}}],["$","$La",null,{"className":"page_bottomAd__f0OO_","client":"ca-pub-6151583773425822","slot":"your-ad-slot-id"}]]}]]}],["$","div",null,{"className":"page_floatingButtons__qJiZU","children":["$","$Lc",null,{}]}],["$","$Ld",null,{}]]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Pod - Lifecycle | Nimkoes Tech Blog"}],["$","meta","3",{"name":"description","content":"기본 설명"}],["$","meta","4",{"name":"application-name","content":"Nimkoes Tech Blog"}],["$","link","5",{"rel":"author","href":"https://nimkoes.github.io/tech-blog"}],["$","meta","6",{"name":"author","content":"Nimkoes"}],["$","link","7",{"rel":"manifest","href":"/tech-blog/site.webmanifest","crossOrigin":"use-credentials"}],["$","meta","8",{"name":"keywords","content":"tech-blog,backend,software architect,infrastructure,development"}],["$","meta","9",{"name":"creator","content":"Nimkoes"}],["$","meta","10",{"name":"publisher","content":"Nimkoes"}],["$","meta","11",{"name":"robots","content":"index, follow, nocache"}],["$","meta","12",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","13",{"name":"category","content":"technology"}],["$","link","14",{"rel":"canonical","href":"https://nimkoes.github.io/tech-blog"}],["$","link","15",{"rel":"alternate","hrefLang":"ko-KR","href":"https://nimkoes.github.io/tech-blog"}],["$","meta","16",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","17",{"name":"google-adsense-account","content":"ca-pub-6151583773425822"}],["$","meta","18",{"property":"og:title","content":"Nimkoes Tech Blog - 개발자의 기술 이야기"}],["$","meta","19",{"property":"og:description","content":"I work diligently to become lazy ☕"}],["$","meta","20",{"property":"og:url","content":"https://nimkoes.github.io/tech-blog"}],["$","meta","21",{"property":"og:site_name","content":"Nimkoes Tech Blog"}],["$","meta","22",{"property":"og:locale","content":"ko_KR"}],["$","meta","23",{"property":"og:image","content":"https://nimkoes.github.io/tech-blog/og-image.png"}],["$","meta","24",{"property":"og:image:width","content":"1200"}],["$","meta","25",{"property":"og:image:height","content":"630"}],["$","meta","26",{"property":"og:image:alt","content":"Nimkoes Tech Blog"}],["$","meta","27",{"property":"og:image:type","content":"image/png"}],["$","meta","28",{"property":"og:type","content":"website"}],["$","meta","29",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","30",{"name":"twitter:site","content":"@nimkoes"}],["$","meta","31",{"name":"twitter:creator","content":"@nimkoes"}],["$","meta","32",{"name":"twitter:title","content":"Nimkoes Tech Blog"}],["$","meta","33",{"name":"twitter:description","content":"I work diligently to become lazy ☕"}],["$","meta","34",{"name":"twitter:image","content":"https://nimkoes.github.io/tech-blog/og-image.png"}],["$","link","35",{"rel":"icon","href":"/tech-blog/favicon.ico","sizes":"any"}],["$","link","36",{"rel":"icon","href":"/tech-blog/icon.svg","type":"image/svg+xml"}],["$","link","37",{"rel":"icon","href":"/tech-blog/favicon-32x32.png","sizes":"32x32","type":"image/png"}],["$","link","38",{"rel":"icon","href":"/tech-blog/favicon-16x16.png","sizes":"16x16","type":"image/png"}],["$","link","39",{"rel":"apple-touch-icon","href":"/tech-blog/apple-touch-icon.png","sizes":"180x180","type":"image/png"}],["$","link","40",{"rel":"mask-icon","href":"/tech-blog/safari-pinned-tab.svg","color":"#5bbad5"}],["$","meta","41",{"name":"next-size-adjust"}]]
1:null
