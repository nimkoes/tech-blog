3:I[4707,[],""]
5:I[6423,[],""]
6:I[4829,["679","static/chunks/679-09931d2c20ac23c4.js","185","static/chunks/app/layout-7b9eb4963e5bd58c.js"],"default"]
4:["slug","0006250303-kubernetes","d"]
0:["DYD_M1rFU_vsFyhVUDeH2",[[["",{"children":["post",{"children":[["slug","0006250303-kubernetes","d"],{"children":["__PAGE__?{\"slug\":\"0006250303-kubernetes\"}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["post",{"children":[["slug","0006250303-kubernetes","d"],{"children":["__PAGE__",{},[["$L1","$L2",[["$","link","0",{"rel":"stylesheet","href":"/tech-blog/_next/static/css/86708423b213bf15.css","precedence":"next","crossOrigin":"$undefined"}]]],null],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","post","children","$4","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[null,["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","post","children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined"}]],null]},[[[["$","link","0",{"rel":"stylesheet","href":"/tech-blog/_next/static/css/1f59140b53390c8f.css","precedence":"next","crossOrigin":"$undefined"}]],["$","html",null,{"lang":"ko","className":"__className_c5102c","children":[["$","head",null,{"children":[["$","meta",null,{"name":"viewport","content":"width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no"}],["$","meta",null,{"name":"theme-color","content":"#ffffff","media":"(prefers-color-scheme: light)"}],["$","meta",null,{"name":"theme-color","content":"#000000","media":"(prefers-color-scheme: dark)"}],["$","meta",null,{"name":"naver-site-verification","content":"1df124e1d8331da4467178ffddd6188e1d413576"}],["$","meta",null,{"name":"google-adsense-account","content":"ca-pub-6151583773425822"}],["$","link",null,{"rel":"dns-prefetch","href":"https://fonts.googleapis.com"}],["$","link",null,{"rel":"dns-prefetch","href":"https://fonts.gstatic.com"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.googleapis.com","crossOrigin":"anonymous"}],["$","link",null,{"rel":"preconnect","href":"https://fonts.gstatic.com","crossOrigin":"anonymous"}],["$","script",null,{"async":true,"src":"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-6151583773425822","crossOrigin":"anonymous"}]]}],["$","$L6",null,{"children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[]}]}]]}]],null],null],["$L7",null]]]]
8:I[2089,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
9:I[3299,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
a:I[1040,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
c:I[2786,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
d:I[6798,["605","static/chunks/app/post/%5Bslug%5D/page-5fc1a46522590ee2.js"],"default"]
b:T295d,<p><img src="/tech-blog/resources/images/kubernetes/0006-01.png" alt="0006-01"></p>
<h1>ClusterIP</h1>
<p>Service 는 기본적으로 아래 그림과 같이 자신의 ClusterIp 를 가지고 있다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0006-02.png" alt="0006-02"></p>
<p>그리고 이 Service 를 Pod 에 연결시켜두면 Service 의 IP 를 통해 Pod 에 접근할 수 있게 된다.</p>
<p>앞서 Pod 에도 동일하게 Cluster 내에서 접근할 수 있는 IP 가 존재함에도 불구하고 굳이 Service 를 붙여서 접근하는지 의문이 생긴다. 이렇게 하는 이유는 Pod 는 k8s 에서 다양한 이유로 언제든
다운될 수 있으며 언제든 다시 생성될 수 있는 오브젝트이기 때문이다. (다시 생성 될 경우 Pod 의 IP 는 매번 달라진다.)</p>
<p>반면 Service 의 경우 사용자가 직접 명령을 하지 않는 한 스스로 삭제 되거나 다시 생성되지 않는다. 즉, 이 Service IP 를 사용하면 항상 연결 되어있는 Pod 에 접근할 수 있게 된다.</p>
<p>Service 에는 다양한 종류가 있고 각 Service 마다 Pod 에 접근하는 방식이 다르다. 그 중 가장 기본적인 방식이 ClusterIP 방식 이다. 이 IP 는 k8s Cluster 내에서만 접근이 가능한
IP 이다. Pod 에 있는 IP 와 특징이 동일하다. 즉, 이 IP 에는 Cluster 내의 다양한 오브젝트들이 접근할 수 있지만 외부에서는 접근이 불가능 하다. 또한 다수의 Pod 를 연결할 수 있는데
Service 는 트래픽을 분산해서 Pod 에 전달 한다.</p>
<pre><code class="hljs language-yml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span>
<span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span>
<span class="hljs-attr">metadata:</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">svc-1</span>
<span class="hljs-attr">spec:</span>
  <span class="hljs-attr">selector:</span> <span class="hljs-comment"># Pod 와 연결하기 위한 selector</span>
    <span class="hljs-attr">app:</span> <span class="hljs-string">pod</span>
  <span class="hljs-attr">ports:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">port:</span> <span class="hljs-number">9000</span>         <span class="hljs-comment"># 9000 port 로 Service 에 접근하면</span>
      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">8080</span>   <span class="hljs-comment"># 8080 port 의 Pod 로 연결</span>
  <span class="hljs-attr">type:</span> <span class="hljs-string">ClusterIP</span>      <span class="hljs-comment"># optional 값으로 default(ClusterIP)</span>
</code></pre>
<pre><code class="hljs language-yml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span>
<span class="hljs-attr">kind:</span> <span class="hljs-string">Pod</span>
<span class="hljs-attr">metadata:</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">pod-1</span>
  <span class="hljs-attr">labels:</span> <span class="hljs-comment"># Service 에 연결하기 위한 lebel</span>
    <span class="hljs-attr">app:</span> <span class="hljs-string">pod</span>
<span class="hljs-attr">spec:</span>
  <span class="hljs-attr">nodeSelector:</span>
    <span class="hljs-attr">kubernetes.io/hostname:</span> <span class="hljs-string">k8s-node1</span>
  <span class="hljs-attr">containers:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">container</span>
      <span class="hljs-attr">image:</span> <span class="hljs-string">kubetm/app</span>
      <span class="hljs-attr">ports:</span>
        <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">8080</span>
</code></pre>
<h1>NodePort</h1>
<p>NodePort 타입의 Service 에도 기본적으로 ClusterIP 가 할당 되고 ClusterIP 와 같은 기능을 포함하고 있다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0006-03.png" alt="0006-03"></p>
<p>NodePort 타입이 가지는 특징은 k8s Cluster 에 연결되어 있는 모든 Node 에 동일한 Port 가 할당 되어 외부로부터 어떤 Node 든 그 IP 에 port 로 접속하면 Service 에 연결이
된다. 연결 된 Service 는 기본 기능인 자신과 연결된 Pod 에 트래픽을 전달 한다.</p>
<p>주의할 점은 Pod 가 있는 Node 에만 port 가 할당 되는 것이 아니라 모든 Node 에 port 가 만들어 진다.</p>
<pre><code class="hljs language-yml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span>
<span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span>
<span class="hljs-attr">metadata:</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">svc-2</span>
<span class="hljs-attr">spec:</span>
  <span class="hljs-attr">selector:</span>
    <span class="hljs-attr">app:</span> <span class="hljs-string">pod</span>
  <span class="hljs-attr">ports:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">port:</span> <span class="hljs-number">9000</span>
      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">8080</span>
      <span class="hljs-attr">nodePort:</span> <span class="hljs-number">30000</span>    <span class="hljs-comment"># optional 값으로 30000~32767 값</span>
  <span class="hljs-attr">type:</span> <span class="hljs-string">NodePort</span>       <span class="hljs-comment"># NodePort 타입의 Service</span>
  <span class="hljs-attr">externalTrafficPolicy:</span> <span class="hljs-string">Local</span>
</code></pre>
<p>추가로 위 그림 기준으로 Node1 (192.168.0.11:30000) 에 접근을 하더라도 Service 는 Node2 에 있는 Pod 에 트래픽을 전달할 수 있다. Service 입장에서는 어떤 Node 로부터
들어온 트래픽인지 상관 없이 자신에 연결되어 있는 Pod 들에게 트래픽을 전달해 주기 때문이다.</p>
<p>하지만 Service 생성시 <code>externalTrafficPolicy</code> 값을 Local 로 주게 되면, 특정 Node port 의 IP 로 접근하는 트래픽은 Service 가 해당 Node 에 있는 Pod 에게만
트래픽을 전달 해준다.</p>
<h1>Load Balancer</h1>
<p>Local Balancer 타입으로 Service 를 만들면 NodePort 의 성격을 그대로 가지게 된다.</p>
<p><img src="/tech-blog/resources/images/kubernetes/0006-04.png" alt="0006-04"></p>
<p>추가로 Local Balancer 가 생성되어 각각의 Node 에 트래픽을 분산시켜주는 역할을 한다.</p>
<p>한가지 문제가 있는데, 이 Load Balancer 에 접속하기 위한 외부 IP 는 k8s 를 개별 설치했을 경우 자동으로 생성되지 않기 때문에 별도로 외부 접속 IP 를 할당해 주는 plugin 이 설치 되어
있어야 IP 가 생성 된다.</p>
<p>GCP, AWS, Azure, OpenStack 등과 같은 k8s platform 을 사용 할 경우 외부 IP 를 지원해주는 plugin 이 설치되어 있어 Load Balancer 타입의 Service 를 생성 할
경우 알아서 외부에서 접속 할 IP 를 만들어 준다.</p>
<pre><code class="hljs language-yml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span>
<span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span>
<span class="hljs-attr">metadata:</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">svc-3</span>
<span class="hljs-attr">spec:</span>
  <span class="hljs-attr">selector:</span>
    <span class="hljs-attr">app:</span> <span class="hljs-string">pod</span>
  <span class="hljs-attr">ports:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">port:</span> <span class="hljs-number">9000</span>
      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">8080</span>
  <span class="hljs-attr">type:</span> <span class="hljs-string">LoadBalancer</span>     <span class="hljs-comment"># 특별한 설정 없이 타입만 지정</span>
</code></pre>
<h1>정리</h1>
<p>ClusterIP 는 외부에서 접근할 수 없고 Cluster 내에서만 사용하는 IP 이다. 그렇기 때문에 이 IP 에 접근 가능한 대상은 Cluster 내부에 접근할 수 있는 운영자와 같은 인가된 사람일 수 밖에
없다. 주된 작업은 k8s 대시보드 관리 또는 각 Pod 의 서비스 상태를 디버깅하는 작업을 할 때 사용 한다.</p>
<p>NodePort 는 물리적인 host IP 를 통해 Pod 에 접근이 가능하다는 특징이 있다. 대부분 host IP 는 보안상 내부 망에서만 접근이 가능하도록 네트워크를 구성하기 때문에 NodePort 는
Cluster 밖에는 있지만 내부 망에서 접근해야 할 때 사용 한다. 또한 일시적인 외부 연동 용도로 사용 하는데, 예를 들면 내부에서 개발을 하다가 외부에 대모를 하는 경우 네트워크 장비에 포트 포워딩을 할 경우
사용할 수 있다.</p>
<p>Load Balancer 는 실제로 외부에 서비스를 노출 시키려면 Load Balancer 를 이용해야 한다. 그래야 내부 IP 가 노출되지 않고 외부 IP 를 통해 안정적으로 서비스를 노출시킬 수 있다. 다시
말해서 Load Balnacer 의 IP 는 외부에 시스템을 노출시킬 때 사용한다.</p>
<pre><code class="hljs language-yml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span>
<span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span>
<span class="hljs-attr">metadata:</span>
  <span class="hljs-attr">name:</span> <span class="hljs-string">svc-3</span>
<span class="hljs-attr">spec:</span>
  <span class="hljs-attr">selector:</span> <span class="hljs-comment"># Pod의 Label과 매칭</span>
    <span class="hljs-attr">app:</span> <span class="hljs-string">pod</span>
  <span class="hljs-attr">ports:</span>
    <span class="hljs-bullet">-</span> <span class="hljs-attr">port:</span> <span class="hljs-number">9000</span>          <span class="hljs-comment"># Service 자체 Port</span>
      <span class="hljs-attr">targetPort:</span> <span class="hljs-number">8080</span>    <span class="hljs-comment"># Pod의 Container Port</span>
  <span class="hljs-attr">type:</span> <span class="hljs-string">ClusterIP,</span> <span class="hljs-string">NodePort,</span> <span class="hljs-string">LoadBalancer</span>  <span class="hljs-comment"># 생략시 ClusterIP</span>
  <span class="hljs-attr">externalTrafficPolicy:</span> <span class="hljs-string">Local,</span> <span class="hljs-string">Cluster</span>    <span class="hljs-comment"># 트래픽 분배 역할</span>
</code></pre>2:[["$","div",null,{"className":"$undefined","children":[["$","header",null,{"className":"PostHeader_postHeader__OohTH","children":[["$","h1",null,{"className":"PostHeader_title__NoKGt","children":"Service (ClusterIP, NodePort, LoadBalancer)"}],["$","p",null,{"className":"PostHeader_description__moC_r","children":""}],["$","div",null,{"className":"PostHeader_meta__9Swgx","children":[["$","span",null,{"className":"$undefined","children":"nimkoes"}],["$","span",null,{"className":"$undefined","children":"2021-03-02"}]]}],["$","div",null,{"className":"PostHeader_tags__lGQ1Q","children":[["$","span","Kubernetes",{"className":"PostHeader_tag__Jf7BC","children":"Kubernetes"}],["$","span","k8s",{"className":"PostHeader_tag__Jf7BC","children":"k8s"}],["$","span","infra",{"className":"PostHeader_tag__Jf7BC","children":"infra"}]]}]]}],["$","$L8",null,{}],["$","article",null,{"className":"page_markdown__SVl4d","children":[["$","$L9",null,{"className":"page_topAd__ctbB7"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":""}}],["$","$La",null,{"className":"page_middleAd__4qBOv","client":"ca-pub-6151583773425822","slot":"your-ad-slot-id"}],["$","div",null,{"dangerouslySetInnerHTML":{"__html":"$b"}}],["$","$La",null,{"className":"page_bottomAd__f0OO_","client":"ca-pub-6151583773425822","slot":"your-ad-slot-id"}]]}]]}],["$","div",null,{"className":"page_floatingButtons__qJiZU","children":["$","$Lc",null,{}]}],["$","$Ld",null,{}]]
7:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Service (ClusterIP, NodePort, LoadBalancer) | Nimkoes Tech Blog"}],["$","meta","3",{"name":"description","content":"기본 설명"}],["$","meta","4",{"name":"application-name","content":"Nimkoes Tech Blog"}],["$","link","5",{"rel":"author","href":"https://nimkoes.github.io/tech-blog"}],["$","meta","6",{"name":"author","content":"Nimkoes"}],["$","link","7",{"rel":"manifest","href":"/tech-blog/site.webmanifest","crossOrigin":"use-credentials"}],["$","meta","8",{"name":"keywords","content":"tech-blog,backend,software architect,infrastructure,development"}],["$","meta","9",{"name":"creator","content":"Nimkoes"}],["$","meta","10",{"name":"publisher","content":"Nimkoes"}],["$","meta","11",{"name":"robots","content":"index, follow, nocache"}],["$","meta","12",{"name":"googlebot","content":"index, follow, max-video-preview:-1, max-image-preview:large, max-snippet:-1"}],["$","meta","13",{"name":"category","content":"technology"}],["$","link","14",{"rel":"canonical","href":"https://nimkoes.github.io/tech-blog"}],["$","link","15",{"rel":"alternate","hrefLang":"ko-KR","href":"https://nimkoes.github.io/tech-blog"}],["$","meta","16",{"name":"format-detection","content":"telephone=no, address=no, email=no"}],["$","meta","17",{"name":"google-adsense-account","content":"ca-pub-6151583773425822"}],["$","meta","18",{"property":"og:title","content":"Nimkoes Tech Blog - 개발자의 기술 이야기"}],["$","meta","19",{"property":"og:description","content":"I work diligently to become lazy ☕"}],["$","meta","20",{"property":"og:url","content":"https://nimkoes.github.io/tech-blog"}],["$","meta","21",{"property":"og:site_name","content":"Nimkoes Tech Blog"}],["$","meta","22",{"property":"og:locale","content":"ko_KR"}],["$","meta","23",{"property":"og:image","content":"https://nimkoes.github.io/tech-blog/og-image.png"}],["$","meta","24",{"property":"og:image:width","content":"1200"}],["$","meta","25",{"property":"og:image:height","content":"630"}],["$","meta","26",{"property":"og:image:alt","content":"Nimkoes Tech Blog"}],["$","meta","27",{"property":"og:image:type","content":"image/png"}],["$","meta","28",{"property":"og:type","content":"website"}],["$","meta","29",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","30",{"name":"twitter:site","content":"@nimkoes"}],["$","meta","31",{"name":"twitter:creator","content":"@nimkoes"}],["$","meta","32",{"name":"twitter:title","content":"Nimkoes Tech Blog"}],["$","meta","33",{"name":"twitter:description","content":"I work diligently to become lazy ☕"}],["$","meta","34",{"name":"twitter:image","content":"https://nimkoes.github.io/tech-blog/og-image.png"}],["$","link","35",{"rel":"icon","href":"/tech-blog/favicon.ico","sizes":"any"}],["$","link","36",{"rel":"icon","href":"/tech-blog/icon.svg","type":"image/svg+xml"}],["$","link","37",{"rel":"icon","href":"/tech-blog/favicon-32x32.png","sizes":"32x32","type":"image/png"}],["$","link","38",{"rel":"icon","href":"/tech-blog/favicon-16x16.png","sizes":"16x16","type":"image/png"}],["$","link","39",{"rel":"apple-touch-icon","href":"/tech-blog/apple-touch-icon.png","sizes":"180x180","type":"image/png"}],["$","link","40",{"rel":"mask-icon","href":"/tech-blog/safari-pinned-tab.svg","color":"#5bbad5"}],["$","meta","41",{"name":"next-size-adjust"}]]
1:null
